JavaScript他是是一门用来与网页交互的脚本语言
核心(ECMAScript)  由ECMA-262定义并提供核心功能
 文档对象模型(DOM) 提供与网页内容交互的方法和接口
浏览器对象模型(BOM) 提供与浏览器交互的方法和接口
JavaScript的这三个部分得到了五大Web浏览器，IE、Firefox、
Chrome、Safari和Opera，不同程度的支持。所有浏览器基本上对
ES5（ECMAScript 5）提供了完善的支持，而对ES6（ECMAScript 6） 和
ES7（ECMAScript 7）的支持度也在不断提升。这些浏览器对DOM
的支持各不相同，但对Level 3的支持日益趋于规范。HTML5中收录的
BOM会因浏览器而异，不过开发者仍然可以假定存在很大一部分公共特性

JavaScript插入HTML的主要方法是使用 <script> 元素。这
个元素是由网景公司创造出来，最早在Netscape Navigator 2中实现
的。后来，这个元素被正式加入到HTML规范。 <script> 元素有下列8个属性。
1、async 立即开始下载脚本，但不能阻止其他页面动作，比如下载资源或等待其他脚本加载。只对外部脚本文件有效
2、charset 使用 src 属性指定的代码字符集。这个属性很少使用，因为大多数浏览器不在乎它的值。
3、crossorigin 配置相关请求的CORS 跨源资源共享 设置。默认不使用CORS
4、defer 表示在文档解析和显示完成后再执行脚本是没有问题的。只对外部脚本件有效
5、integrity 允许比对接收到的资源和指定的加密签名
以验证子资源完整性如果接收到的资源的签名与这个属性指定的签名不匹配，则页面会报错，脚
本不会执行。这个属性可以用于确保内容分发网络
6、language 废弃。最初用于表示代码块中的脚本语言
7、src 包含要执行的代码的外部文件。
8、type 代替 language ，表示代码块中脚本语言的内
容类型（也称MIME类型）。按照惯例，这个值始终都
是 "text/javascript" ，尽
管 "text/javascript" 和 "text/ecmascript" 都已经废
弃了。JavaScript文件的MIME类型通常是 "application/x- javascript" ，不过给type属性这个值有可能导致脚本被忽
略。在非IE的浏览器中有效的其他值还有
行内代码与外部文件 
可以直接在HTML文件中嵌入JavaScript代码，但通常认为最
佳实践是尽可能将JavaScript代码放在外部文件中。不过这个最佳实践并不是明确的强制性规则
可维护性。JavaScript代码如果分散到很多HTML页面，会导致维
护困难。而用一个目录保存所有JavaScript文件，则更容易维护，
这样开发者就可以独立的编辑代码。
缓存。浏览器会根据特定的设置缓存所有外部链接的JavaScript文
件，这意味着如果两个页面都用到同一个文件，则该文件只需下
载一次。这最终意味着页面加载更快。
适应未来。通过把JavaScript放到外部文件中，就不必考虑用
XHTML或前面提到的注释黑科技。包含外部JavaScript文件的语
法在HTML和XHTML中是一样的
语言基础
1、区分大小写：ECMAScript中一切都区分大小写。无论是变量、函数名还是操作符，都区分大小写
2、标识符：字母，数字，下划线 ,$
3、注释 ： //单行注释  /**/ 多行注释
4、严格模式：ECMAScript 5增加了严格模式（strict mode）的概念。严格模式是
一种不同的JavaScript解析和执行模型，ECMAScript 3的一些不规范写
法在这种模式下会被处理，对于不安全的活动将抛出错误。要对整个
脚本启用严格模式，在脚本开头加上这一行
5、语句：省略分号意味着由解析器确定  在哪里结尾在结尾加分号  if 条件输出语句； 
6、变量 变量可以用于保存任何类型的数据。每个变量只不过是一个用于保存任意值的命名占位符。有3
个关键字可以声明变量： var 、 const 和 let
7、 do-while 语句是一种后测试循环语句，即循环体中的代码执行后才会对退出条件进行求值。换句话说，循环体内的代码至少执行一次
8、while 语句是一种先测试循环语句，即先检测退出条件，再执行循环体内的代码。因此， while 循环体内的代码有可能不会执行
9、for 语句也是先测试语句，只不过增加了进入循环之前的初始化代码，以及循环执行后要执行的表达式
10、for-in 循环显示了BOM对象 window 的所有属性。每次执行循环，都会给变量 propName 赋予一个 window 对象
的属性作为值，直到 window 的所有属性都被枚举一遍。与 for 循环一样，这里控制语句中的 const 也不是必需的。但为了确保这个局部变量不被修改，推荐使用 const
11、for-of 语句显示了一个包含4个元素的数组中的所有元素。循环会一直持续到将所有元素都迭代完。与for 循环一样，这里控制语句中的 const 也不是必需的。但为了确保这个局部变量不被修改，推荐使用 const
12、start 是一个标签，可以在后面通过 break 或 continue 语句引用。标签语句的典型应用场景是嵌套循环。
13、reak 和 continue 语句为执行循环代码提供了更严格的控制手段。其中， break 语句用于立即退出循环，强制执行循环后的下一条语句。而 continue 语句也用于立即退出循环，但会再次从循环顶部开始执行
14、with 语句的主要场景是针对一个对象反复操作，这时候将代码作用域设置为该对象能提供便利
函数 
函数对任何语言来说都是核心组件，因为它们可以封装语句，然后在任何地方、任何时间执行。ECMAScript中的函数使用function 关键字声明，后跟一组参数，然后是函数体。
diff() 函数用于计算两个数值的差。如果第一个数值小于第二个，则用第二个减第一个；否则，就用第一个减第二个。代码中每个分支都有自己的 return 语句，返回正确的差值。
return 语句也可以不带返回值。这时候，函数会立即停止执行并返回 undefined 。这种用法最常用于提前终止函数执行，并不是为了返回值
严格模式对函数也有一些限制

函数不能以 eval 或 arguments 作为名称；
函数的参数不能叫 eval 或 arguments ；
两个函数的参数不能叫同一个名称。
如果违反上述规则，则会导致语法错误，代码也不会执行。
