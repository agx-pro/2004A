阅读

1.DOM

1.1。文档对象模型（DOM，Document Object Model）是一个应用编程接口（API），用于在HTML中使用扩展的XML。DOM将整个页面抽象为一组分层节点。HTML或XML页面的每个组成部分都是一种节点，包含不同的数据

1.2.DOM Level 1的目标是映射文档结构，而DOM Level 2的目标则宽泛得多。
       DOM Level 2新增了以下模块，以支持新的接口。
       DOM视图：描述追踪文档不同视图（如应用CSS样式前后的文档）的接口。
       DOM事件：描述事件及事件处理的接口。
       DOM样式：描述处理元素CSS样式的接口。
       DOM遍历和范围：描述遍历和操作DOM树的接口。

小结
JavaScript是一门用来与网页交互的脚本语言，包含以下三个组成部分。

ECMAScript：由ECMA-262定义并提供核心功能。
文档对象模型（DOM）：提供与网页内容交互的方法和接口。
浏览器对象模型（BOM）：提供与浏览器交互的方法和接口。

JavaScript的这三个部分得到了五大Web浏览器（IE、Firefox、
Chrome、Safari和Opera）不同程度的支持。所有浏览器基本上对
ES5（ECMAScript 5）提供了完善的支持，而对ES6（ECMAScript 6）
和ES7（ECMAScript 7）的支持度也在不断提升。

2.HTML中的JavaScript
1.async ：可选。表示应该立即开始下载脚本，但不能阻止其他
页面动作，比如下载资源或等待其他脚本加载。只对外部脚本文
件有效。
2.charset ：可选。使用 src 属性指定的代码字符集。这个属
性很少使用，因为大多数浏览器不在乎它的值。
3.crossorigin ：可选。配置相关请求的CORS（跨源资源共
享）设置。默认不使用CORS。
4.defer ：可选。表示在文档解析和显示完成后再执行脚本是没
有问题的。只对外部脚本文件有效。在IE7及更早的版本中，对行
内脚本也可以指定这个属性。
5.integrity ：可选。允许比对接收到的资源和指定的加密签名
以验证子资源完整性（SRI，Subresource Intergrity）。如果接收到
的资源的签名与这个属性指定的签名不匹配，则页面会报错，脚
本不会执行。这个属性可以用于确保内容分发网络（CDN，
Content Delivery Network）不会提供恶意内容。
6.language ：废弃。最初用于表示代码块中的脚本语言
（如 "JavaScript" 、 "JavaScript
1.2" 或 "VBScript" ）。大多数浏览器都会忽略这个属性，
不应该再使用它。
7.src ：可选。表示包含要执行的代码的外部文件。

2.标签占位符
所有 <script> 元素都被放在页面的 <head> 标签内
这种做法的主要目的是把外部的CSS和JavaScript文件都集中放到
一起。不过，把所有JavaScript文件都放在 <head> 里，也就意味着
必须把所有JavaScript代码都下载、解析和解释完成后，才能开始渲染
页面（页面在浏览器解析到 <body> 的起始标签时开始渲染）。对于
需要很多JavaScript的页面，这会导致页面渲染的明显延迟，在此期间
浏览器窗口完全空白。为解决这个问题，现代Web应用程序通常将所
有JavaScript引用放在 <body> 元素中的页面内容后面

3.推迟执行脚本
HTML 4.01为 <script> 元素定义了一个叫 defer 的属性。这
个属性表示脚本在执行的时候不会改变页面的结构。因此，这个脚本完全可以在整个页面解析完之后再运行。在 <script> 元素上设置
defer 属性，会告诉浏览器应该立即开始下载，但执行应该推迟

4.行内代码与外部文件
虽然可以直接在HTML文件中嵌入JavaScript代码，但通常认为最
佳实践是尽可能将JavaScript代码放在外部文件中。不过这个最佳实践
并不是明确的强制性规则。

1.可维护性。JavaScript代码如果分散到很多HTML页面，会导致维
护困难。而用一个目录保存所有JavaScript文件，则更容易维护这样开发者就可以独立于使用它们的HTML页面来编辑代码
2.缓存。浏览器会根据特定的设置缓存所有外部链接的JavaScript文
件，这意味着如果两个页面都用到同一个文件，则该文件只需下
载一次。这最终意味着页面加载更快。
3.适应未来。通过把JavaScript放到外部文件中，就不必考虑用
XHTML或前面提到的注释黑科技。包含外部JavaScript文件的语
法在HTML和XHTML中是一样的。

在配置浏览器请求外部文件时，要重点考虑的一点是它们会占用
多少带宽。在SPDY/HTTP2中，预请求的消耗已显著降低，以轻量、
独立JavaScript组件形式向客户端送达脚本更具优势。

5.<noscript> 元素
针对早期浏览器不支持JavaScript的问题，需要一个页面优雅降级
的处理方案。最终， <noscript> 元素出现，被用于给不支持
JavaScript的浏览器提供替代内容。虽然如今的浏览器已经100%支持
JavaScript，但对于禁用JavaScript的浏览器来说，这个元素仍然有它的
用处。

<noscript> 元素可以包含任何可以出现在 <body> 中的
HTML元素， <script> 除外。在下列两种情况下，浏览器将显示包
含在 <noscript> 中的内容：
1.浏览器不支持脚本
2.浏览器对脚本的支持被关闭。

任何一个条件被满足，包含在 <noscript> 中的内容就会被渲
染。否则，浏览器不会渲染 <noscript> 中的内容
