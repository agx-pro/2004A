javascript    ---》  组成 ECMAscript 核心库    DOM文档对象模型     BOM浏览器对象模型

五大浏览器   -->  IE、Firefox、Safari、Chrome  Opera

文档对象模型（DOM，D?cument Ob?ect M?del）是一个应用编程
接口（API），用于在HTML中使用扩展的XML。DOM将整个页面抽
象为一组分层节点。HTML或XML页面的每个组成部分都是一种节
点，包含不同的数据。比如?面的HTML页面：
<html> <head> <title>Sample Page</title> </head>
<body> <p> Hello World!</p> </body> </html>


万维网联盟（W3C，World
Wide Web Consortium）

文档模式
IE5.5发明了文档模式的概念，即可以使用 doctype 切换文档模
式。最初的文档模式有两种：混杂模式（?uirks m?de）和标准模式
（standards m?de）。

ECMAScript的语法  1 区分大小写   2 标识符
所谓标识符，就是变量、函数、属性或函数参数的名称  3 注释
ECMAScript采用C语言风格的注释，包括单行注释和块注释。单
行注释以两个斜杠字符开头   4 严格模式
ECMAScript 5增加了严格模式（strict m?de）的概念。严格模式是
一种不同的JavaScript解析和执行模型，ECMAScript 3的一些不规范写
法在这种模式?会被处理，对于不安全的活动将抛出错误  5 语句
ECMAScript中的语句以分号结尾。


关键字与保留字
ECMA-262描述了一组保留的关键字，这些关键字有特殊用途，
比如表示控制语句的开始和结束，或者执行特定的操作。按照规定，
保留的关键字不能用作标识符或属性名。ECMA-262第6版规定的所有
关键字如?：
break do in typeof
case else instanceof var
catch export new void
class extends return while
const finally super with
continue for switch yield
debugger function this
default if throw
delete import try


3.3 变量
ECMAScript变量是松散类型的，意思是变量可以用于保存任何类
型的数据。每个变量只不过是一个用于保存任意值的命名占位符。有3个关键字可以声明变量： var 、 const 和 let 。其中， var 在
ECMAScript的所有版本中都可以使用，而 const 和 let 只能在
ECMAScript 6及更晚的版本中使用。

1. var 声明作用域
关键的问题在于，使用 var 操作符定义的变量会成为包含它的
函数的局部变量。比如，使用 var 在一个函数内部定义一个变
量，就意味着该变量将在函数退出时被销毁：

2 let 声明
let 跟 var 的作用差不多，但有着非常重要的区别。最明显的
区别是， let 声明的范围是块作用域，而 var 声明的范围是函数作
用域。

    1. 暂时性死区
let 与 var 的另一个重要的区别，就是 let 声明的变量不会
在作用域中被提升。

   2全局声明
与 var 关键字不同，使用 let 在全局作用域中声明的变量不会
成为 window 对象的属性（ var 声明的变量则会）。

     3条件声明
在使用 var 声明变量时，由于声明会被提升，JavaScript引擎会
自动将多余的声明在作用域顶部合并为一个声明。因为 let 的
作用域是块，所以不可能检查前面是否已经使用 let 声明过同
名变量，同时也就不可能在没有声明的情况?声明它。

3const 声明
const 的行为与 let 基本相同，唯一一个重要的区别是用它声
明变量时必须同时初始化变量，且尝试修改 const 声明的变量会导
致运行时错误。
  
    const 声明的限制只适用于它指向的变量的引用。换句话说，
如果 const 变量引用的是一个对象，那么修改这个对象内部的属性
并不违反 const 的限制。


3.3.4 声明风格及最佳实践
ECMAScript 6增加 let 和 const 从客观上为这门语言更精确地
声明作用域和语义提供了更好的支持。行为怪异的 var 所造成的各
种问题，已经让JavaScript社区为之苦恼了很多年。随着这两个新关键
字的出现，新的有助于提升代码质量的最佳实践也逐渐显现。
1. 不使用 var
有了 let 和 const ，大多数开发者会发现自己不再需要 var
了。限制自己只使用 let 和 const 有助于提升代码质量，因为
变量有了明确的作用域、声明位置，以及不变的值。
2. const 优先， let 次之
使用 const 声明可以让浏览器运行时强制保持变量不变，也可
以让静态代码分析工具提前发现不合法的赋值操作。因此，很多
开发者认为应该优先使用 const 来声明变量，只在提前知道未
来会有修改时，再使用 let 。这样可以让开发者更有信心地推
断某些变量的值永远不会变，同时也能迅速发现因意外赋值导致
的非预期行为。


3.4 数据类型
ECMAScript有6种简单数据类型（也称为原始类型）：
Undefined 、 Null 、 Boolean 、 Number 、 String 和
Symbol 。 Symbol （符号）是ECMAScript 6新增的。还有一种复
杂数据类型叫 Object （对象）。 Object 是一种无序名值对的集
合。


typeof 操作符
因为ECMAScript的类型系统是松散的，所以需要一种手段来确定
任意变量的数据类型。 typeof 操作符就是为此而生的。


Symbol 类型
Symbol （符号）是ECMAScript 6新增的数据类型。符号是原始
值，且符号实例是唯一、不可变的。符号的用途是确保对象属性使用
唯一标识符，不会发生属性冲突的?		 
   1. 符号的基本用法
符号需要使用 Symbol() 函数初始化。因为符号本身是原始类
型，所以 typeof 操作符对符号返回 symbol 。




































































